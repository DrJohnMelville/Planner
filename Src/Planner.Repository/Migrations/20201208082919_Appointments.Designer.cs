// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planner.Repository.SqLite;

namespace Planner.Repository.Migrations
{
    [DbContext(typeof(PlannerDataContext))]
    [Migration("20201208082919_Appointments")]
    partial class Appointments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Planner.Models.Appointments.Appointment", b =>
                {
                    b.Property<Guid>("AppointmentDetailsId")
                        .HasColumnType("TEXT");

                    b.Property<long>("Start")
                        .HasColumnType("TEXT");

                    b.Property<long>("End")
                        .HasColumnType("TEXT");

                    b.HasKey("AppointmentDetailsId", "Start");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Planner.Models.Appointments.AppointmentDetails", b =>
                {
                    b.Property<Guid>("AppointmentDetailsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BodyText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UniqueOutlookId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AppointmentDetailsId");

                    b.HasIndex("UniqueOutlookId");

                    b.ToTable("AppointmentDetails");
                });

            modelBuilder.Entity("Planner.Models.Blobs.Blob", b =>
                {
                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.HasIndex("Date");

                    b.ToTable("Blobs");
                });

            modelBuilder.Entity("Planner.Models.Notes.Note", b =>
                {
                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.HasIndex("Date");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Planner.Models.Tasks.PlannerTask", b =>
                {
                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<char>("Priority")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusDetail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.HasIndex("Date");

                    b.ToTable("PlannerTasks");
                });

            modelBuilder.Entity("Planner.Models.Appointments.Appointment", b =>
                {
                    b.HasOne("Planner.Models.Appointments.AppointmentDetails", "AppointmentDetails")
                        .WithMany("Appointments")
                        .HasForeignKey("AppointmentDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppointmentDetails");
                });

            modelBuilder.Entity("Planner.Models.Appointments.AppointmentDetails", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
