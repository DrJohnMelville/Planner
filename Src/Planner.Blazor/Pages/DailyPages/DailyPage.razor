@page "/DailyPage/{DateString}"
@using Planner.Models.Repositories
@using Planner.Models.Tasks
@inject ILocalRepository<PlannerTask> taskStore;
<h3>Daily Page for @DateString </h3>
<table>
    @if (tasks != null)
    @foreach (var task in tasks)
    {
        <tr>
            <td><span class="@ClassFromStatus(task.Status)" aria-hidden="true"></span></td>
            <td>@task.PriorityDisplay</td>
            <td>@task.Name</td>
        </tr>
   }

</table>

@code {

    [Parameter]
    public string DateString { get; set; } = "";

    private IListPendingCompletion<PlannerTask>? tasks;
    
    protected override Task OnInitializedAsync() => 
        taskStore.TryItemsForDate(DateString, out tasks) ?
        tasks.CompleteList() : Task.CompletedTask;

    private string ClassFromStatus(PlannerTaskStatus status) =>
        status switch{
            PlannerTaskStatus.Delegated => "oi oi-timer",
            PlannerTaskStatus.Canceled => "oi oi-x",
            PlannerTaskStatus.Deferred => "oi oi-arrow-thick-right",
            PlannerTaskStatus.Pending => "oi oi-media-record",
            PlannerTaskStatus.Done => "oi oi-check",
            _ => "",
            };

}