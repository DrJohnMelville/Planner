<UserControl x:Class="Planner.Wpf.TaskList.DailyTaskListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Planner.Wpf.TaskList"
             xmlns:wpfHacks="clr-namespace:Melville.MVVM.Wpf.WpfHacks;assembly=Melville.MVVM.Wpf"
             xmlns:eventBindings="clr-namespace:Melville.MVVM.Wpf.EventBindings;assembly=Melville.MVVM.Wpf"
             xmlns:bindings="clr-namespace:Melville.MVVM.Wpf.Bindings;assembly=Melville.MVVM.Wpf"
             xmlns:taskList="clr-namespace:Planner.WpfViewModels.TaskList;assembly=Planner.WpfViewModels"
             xmlns:mouseClicks="clr-namespace:Melville.MVVM.Wpf.MouseClicks;assembly=Melville.MVVM.Wpf"
             xmlns:hacks="clr-namespace:Melville.WpfControls.Hacks;assembly=Melville.WpfControls"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             d:DataContext="{d:DesignData {x:Type taskList:DailyTaskListViewModel}}"
             mc:Ignorable="d" Grid.IsSharedSizeScope="True" x:Name="TopControl">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="4 2" />
        </Style>
        <DataTemplate DataType="{x:Type taskList:DelegatedContext}">
            <StackPanel Margin="10">
                <TextBlock Margin="0 0 0 10" Text="{Binding Prompt}"/>
                <TextBox Text="{Binding EditText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="200"
                         hacks:SetSelection.Immediate="true"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type taskList:PickDeferDate}">
            <StackPanel>
                <Calendar DisplayDateStart="{Binding BeginDay, Mode=OneWay, Converter={x:Static taskList:PickDeferDate.DateConv}}"
                          SelectedDate="{Binding SelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                      Converter={x:Static taskList:PickDeferDate.DateConv}}"
                          local:CalendarHelper.SingleClickDefocus="true" 
                          MouseDoubleClick="{eventBindings:EventBinding DoDeferral}"/>
                <Button Click="{eventBindings:EventBinding DoDeferral}">Defer Task</Button>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TaskLineTemplate" DataType="{x:Type taskList:PlannerTaskViewModel}">
            <Grid Background="Transparent" 
                  ContextMenuOpening="{eventBindings:EventBinding InitializePriorityMenu}"
                  ToolTip="{Binding PlannerTask.StatusDetail, 
                  Converter={x:Static taskList:PlannerTaskViewModel.ToolTipOnlyWithText}}"
                  Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type local:DailyTaskListView}}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="CheckMark" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="PriorityRank" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center  " />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Priority" ItemsSource="{Binding Menus}">
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem Header="{Binding Display}"
                                              Click="{eventBindings:EventBinding SetItemPriority}"/>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>
                        <MenuItem Header="Incomplete" Click="{eventBindings:EventBinding MarkIncomplete}">
                            <MenuItem.Icon>
                                <TextBlock Text="" FontFamily="Wingdings"></TextBlock>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Done" Click="{eventBindings:EventBinding MarkDone}">
                            <MenuItem.Icon>
                                <TextBlock Text="a" FontFamily="Marlett"></TextBlock>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Canceled" Click="{eventBindings:EventBinding MarkCanceled}">
                            <MenuItem.Icon>
                                <TextBlock Text="r" FontFamily="Marlett"></TextBlock>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Pending" Click="{eventBindings:EventBinding MarkPending}">
                            <MenuItem.Icon>
                                <TextBlock Text="¡" FontFamily="Wingdings"></TextBlock>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Delegated" Click="{eventBindings:EventBinding MarkDelegated}">
                            <MenuItem.Icon>
                                <TextBlock Text="n" FontFamily="Marlett"></TextBlock>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Delete Task" Click="{eventBindings:EventBinding DeleteTask}"/>
                        <Separator />
                        <MenuItem Header="{Binding PlacementTarget.Tag.DeferToName[0], 
                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  Click="{eventBindings:EventBinding Defer0}" />
                        <MenuItem Header="{Binding PlacementTarget.Tag.DeferToName[1], 
                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  Click="{eventBindings:EventBinding Defer1}" />
                        <MenuItem Header="{Binding PlacementTarget.Tag.DeferToName[2], 
                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  Click="{eventBindings:EventBinding Defer2}" />
                        <MenuItem Header="{Binding PlacementTarget.Tag.DeferToName[3], 
                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  Click="{eventBindings:EventBinding Defer3}" />
                        <MenuItem Header="{Binding PlacementTarget.Tag.DeferToName[4], 
                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  Click="{eventBindings:EventBinding Defer4}" />
                        <MenuItem Header="{Binding PlacementTarget.Tag.DeferToName[5], 
                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  Click="{eventBindings:EventBinding Defer5}" />
                        <MenuItem Header="{Binding PlacementTarget.Tag.DeferToName[6], 
                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  Click="{eventBindings:EventBinding Defer6}"/>
                        <MenuItem Header="Pick Date" Click="{eventBindings:EventBinding DeferToDate}"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                <Popup IsOpen="{Binding PopupOpen}" StaysOpen="False" Placement="Bottom">
                    <Border BorderThickness="1" BorderBrush="Black" Background="Silver">
                        <ContentPresenter Content="{Binding PopUpContent}"/>
                    </Border>
                </Popup>
                <TextBlock Grid.Column="0" Text="{Binding StatusDisplayText}" FontFamily="{Binding StatusDisplayFont}"
                           Margin="4 2" mouseClicks:Click.LeftClick="PlannerTask.ToggleStatus" FontSize="18">
                </TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding PlannerTask.PriorityDisplay}" Margin="4 2" />
                <Rectangle Grid.ColumnSpan="3" Height="0.5" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                           Fill="LightGray" />
                <Rectangle Grid.ColumnSpan="3" Height="0.5" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"
                           Fill="LightGray" />
                <local:RichTextBlock Grid.Column="2" 
                         Text="{Binding PlannerTask.Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Margin="4 2"
                         Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type local:DailyTaskListView}}}"/>
                <Button Grid.Column="2" Background="Transparent" Click="{eventBindings:EventBinding ButtonA}"
                        Visibility="{bindings:MultiBind {x:Static taskList:AndVisibilityConverter.Instance},
                        {Binding DataContext.IsRankingTasks, 
                             RelativeSource={RelativeSource AncestorType={x:Type local:DailyTaskListView}}},
                             {Binding ShowBlankButton}}" />
                <UniformGrid Columns="4" Grid.Column="2"
                             Visibility="{bindings:MultiBind {x:Static taskList:AndVisibilityConverter.Instance},
                        {Binding DataContext.IsRankingTasks, 
                             RelativeSource={RelativeSource AncestorType={x:Type local:DailyTaskListView}}},
                             {Binding ShowPriorityButton}}">
                    <Button Background="#77FF0000" Content="A" Click="{eventBindings:EventBinding ButtonA}" />
                    <Button Background="#77FFFF00" Content="B" Click="{eventBindings:EventBinding ButtonB}" />
                    <Button Background="#7700FF00" Content="C" Click="{eventBindings:EventBinding ButtonC}" />
                    <Button Background="#770000FF" Content="D" Click="{eventBindings:EventBinding ButtonD}" />
                </UniformGrid>
            </Grid>
        </DataTemplate>
        <CollectionViewSource x:Key="SortedList" 
                              Source="{Binding TaskViewModels}" 
                              IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="PlannerTask.Priority" Direction="Ascending"/> 
                <componentModel:SortDescription PropertyName="PlannerTask.Order" Direction="Ascending"/> 
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>
    <Border BorderThickness="0" BorderBrush="Transparent" x:Name="PlannerTaskListBorder" Background="Transparent">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="CheckMark" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="PriorityRank" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.Resources>
            </Grid.Resources>
            <TextBlock FontFamily="Marlett">a</TextBlock>
            <TextBlock Grid.Column="1">P1</TextBlock>
            <TextBlock Grid.Column="2">Task</TextBlock>
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                          Grid.ColumnSpan="3" Grid.Row="1">
                <StackPanel>
                    <ItemsControl ItemsSource="{Binding Source={StaticResource SortedList}}"
                                  ItemTemplate="{StaticResource TaskLineTemplate}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="CheckMark" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="PriorityRank" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Column="2" Text="{Binding NewTaskName, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="4 2" BorderThickness="0"
                                 LostKeyboardFocus="{eventBindings:EventBinding TryAddPlannerTask}"
                                 KeyDown="{eventBindings:EventBinding NewTaskKeyDown, Parameters=$arg.Key}" />
                    </Grid>
                    <Rectangle Height="1.0" VerticalAlignment="Bottom"
                               HorizontalAlignment="Stretch" Fill="LightGray" />
                </StackPanel>
            </ScrollViewer>
            <Rectangle Width="1" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Right"
                       Fill="LightGray" />
            <Rectangle Grid.Column="1" Grid.RowSpan="2" Width="1" VerticalAlignment="Stretch"
                       HorizontalAlignment="Right" Fill="LightGray" />
            <ToggleButton Grid.Row="1" Grid.ColumnSpan="3" Margin="0 0 20 20"
                          IsChecked="{Binding IsRankingTasks, Mode=TwoWay}"
                          wpfHacks:VisibilityHack.HideUnless="{Binding IsMouseOver, ElementName=PlannerTaskListBorder}"
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Padding="5 0">
                Rank
            </ToggleButton>
        </Grid>
    </Border>
</UserControl>